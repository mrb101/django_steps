# Generated by Django 5.2.3 on 2025-06-27 15:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The unique name of the workflow (e.g., 'Investigation').",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A brief description of what this workflow entails.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Workflow",
                "verbose_name_plural": "Workflows",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WorkflowStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the step (e.g., 'Interview Stakeholders').",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A detailed description of this specific step.",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="The order of this step within the workflow (e.g., 1 for the first step, 2 for the second)."
                    ),
                ),
                (
                    "is_initial_step",
                    models.BooleanField(
                        default=False,
                        help_text="Designates if this is the very first step of the workflow. There should typically be only one initial step per workflow.",
                    ),
                ),
                (
                    "is_final_step",
                    models.BooleanField(
                        default=False,
                        help_text="Designates if this is the last step of the workflow. Once an instance reaches this step, it can be marked as complete.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "workflow",
                    models.ForeignKey(
                        help_text="The workflow this step belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="django_steps.workflow",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow Step",
                "verbose_name_plural": "Workflow Steps",
                "ordering": ["workflow", "order"],
                "unique_together": {("workflow", "order")},
            },
        ),
        migrations.CreateModel(
            name="WorkflowStepStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the status (e.g., 'Pending Review', 'Approved', 'Rejected').",
                        max_length=50,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="A description of this status."
                    ),
                ),
                (
                    "is_default_status",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, this status will be automatically assigned when the workflow instance enters this step. There should be only one default status per step.",
                    ),
                ),
                (
                    "is_completion_status",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, reaching this status marks the completion of the current step, potentially allowing the workflow instance to advance to the next step, or marking the workflow as complete if it's the final step.",
                    ),
                ),
                (
                    "is_cancellation_status",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, this status represents a 'cancelled' state for the workflow instance. There should be only one cancellation status per step.",
                    ),
                ),
                (
                    "is_on_hold_status",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, this status represents an 'on hold' state for the workflow instance. There should be only one on-hold status per step.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "step",
                    models.ForeignKey(
                        help_text="The workflow step this status option belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="possible_statuses",
                        to="django_steps.workflowstep",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow Step Status",
                "verbose_name_plural": "Workflow Step Statuses",
                "ordering": ["step", "name"],
            },
        ),
        migrations.CreateModel(
            name="WorkflowInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this workflow instance was initiated.",
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when this workflow instance was completed (if applicable).",
                        null=True,
                    ),
                ),
                (
                    "object_id",
                    models.IntegerField(
                        help_text="The ID of the object this workflow instance is associated with (e.g., a Claim ID)."
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="The ContentType of the object this workflow instance is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        help_text="The type of workflow being executed (e.g., 'Investigation').",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="instances",
                        to="django_steps.workflow",
                    ),
                ),
                (
                    "current_step",
                    models.ForeignKey(
                        blank=True,
                        help_text="The current step this workflow instance is at.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_instances",
                        to="django_steps.workflowstep",
                    ),
                ),
                (
                    "current_step_status",
                    models.ForeignKey(
                        blank=True,
                        help_text="The current custom status of the workflow instance within its current step.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="instances_at_status",
                        to="django_steps.workflowstepstatus",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow Instance",
                "verbose_name_plural": "Workflow Instances",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="WorkflowTransition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "condition",
                    models.TextField(
                        blank=True,
                        help_text="CEL expression that must evaluate to true for this transition to be taken. Example: 'claim.amount > 1000 && claim.priority == \"high\"'. Leave empty for unconditional transition (if multiple, order matters).",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Higher priority transitions are evaluated first if multiple conditions could be met. Use 0 for normal, positive for higher priority.",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A description of this transition, explaining its purpose or the condition.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "from_step",
                    models.ForeignKey(
                        help_text="The step from which this transition originates.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_transitions",
                        to="django_steps.workflowstep",
                    ),
                ),
                (
                    "to_step",
                    models.ForeignKey(
                        help_text="The step to which this transition leads.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_transitions",
                        to="django_steps.workflowstep",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        help_text="The workflow this transition belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transitions",
                        to="django_steps.workflow",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow Transition",
                "verbose_name_plural": "Workflow Transitions",
                "ordering": ["from_step", "-priority"],
            },
        ),
        migrations.AddConstraint(
            model_name="workflowstepstatus",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default_status", True)),
                fields=("step",),
                name="unique_default_status_per_step",
            ),
        ),
        migrations.AddConstraint(
            model_name="workflowstepstatus",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_cancellation_status", True)),
                fields=("step",),
                name="unique_cancellation_status_per_step",
            ),
        ),
        migrations.AddConstraint(
            model_name="workflowstepstatus",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_on_hold_status", True)),
                fields=("step",),
                name="unique_on_hold_status_per_step",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workflowstepstatus",
            unique_together={("step", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="workflowinstance",
            unique_together={("workflow", "content_type", "object_id")},
        ),
        migrations.AlterUniqueTogether(
            name="workflowtransition",
            unique_together={("from_step", "to_step", "priority")},
        ),
    ]
